using UnityEngine;

public class ModularRoadAnimationManager : MonoBehaviour
{
    [Header("Objects to animate")]
    public Transform object1; // –°—Ç–∞—Ä—Ç–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è X = +17
    public Transform object2; // –°—Ç–∞—Ä—Ç–æ–≤–∞ –ø–æ–∑–∏—Ü—ñ—è X = -19

    public Transform root;
    public Transform currentPiece;

    void Start()
    {
        currentPiece = object1;
    }

    private int lastStep = -1; // –û–≥–æ–ª–æ—Å–∏ —Ü–µ –≤ –∫–ª–∞—Å—ñ, –ø–µ—Ä–µ–¥ Update()

    void Update()
    {
        float currentAngle = root.localEulerAngles.x;

        // –ù–æ—Ä–º–∞–ª—ñ–∑—É—î–º–æ –¥–æ 0‚Äì360
        currentAngle = currentAngle % 360f;

        // –û–∫—Ä—É–≥–ª—é—î–º–æ –¥–æ –Ω–∞–π–±–ª–∏–∂—á–æ–≥–æ –∫—Ä–∞—Ç–Ω–æ–≥–æ 36
        int step = Mathf.FloorToInt(currentAngle / 36f);

        // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—à–∏–π —Ä–∞–∑
        if (lastStep == -1)
        {
            lastStep = step;
            return;
        }

        if (step != lastStep)
        {
            lastStep = step;
            int snappedAngle = step * 36;
            //Debug.Log($"üåÄ –ü–æ—Ç—Ä–∞–ø–∏–ª–∏ –Ω–∞ –Ω–æ–≤–∏–π –∫—É—Ç: {snappedAngle}¬∞");

            // –¢–≤–æ—è –ª–æ–≥—ñ–∫–∞
            currentPiece.SetParent(null);
            currentPiece.localEulerAngles = new Vector3(-19f, 0f, -90f);
            currentPiece.SetParent(root);
            currentPiece = (currentPiece == object1) ? object2 : object1;
        }
    }
}